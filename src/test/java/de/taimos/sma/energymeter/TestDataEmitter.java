package de.taimos.sma.energymeter;

import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Copyright 2014 Taimos GmbH<br>
 * <br>
 *
 * @author Thorsten Hoeger
 *
 */
public class TestDataEmitter {

	private static final String

	private static final Logger logger = LoggerFactory.getLogger(TestDataEmitter.class);


	public static void main(String[] args) {
		byte[] bytes = TestDataEmitter.hexStringToByteArray(TestDataEmitter.TESTDATA);
		String group = "239.12.255.254";
		int port = 9522;
		
		try (MulticastSocket socket = new MulticastSocket(port)) {
			while (true) {
				try {
					TestDataEmitter.logger.info("Sending next datagram to group {} and port {}", group, port);
					DatagramPacket dgram = new DatagramPacket(bytes, bytes.length, InetAddress.getByName(group), port);
					socket.send(dgram);

					Thread.sleep(1000);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	public static byte[] hexStringToByteArray(String s) {
		int len = s.length();
		byte[] data = new byte[len / 2];
		for (int i = 0; i < len; i += 2) {
			data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i + 1), 16));
		}
		return data;
	}
}
